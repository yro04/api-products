{
	"info": {
		"_postman_id": "a66e1b5c-5764-420e-954a-5bd0f22ab149",
		"name": "proudcts-api",
		"description": "1. **GET /products**\n    \n    - Query params: `page`, `name`, `category`, `minPrice`, `maxPrice`\n        \n    - Example: `http://localhost:3000/api/v1/products?page=1&name=Laptop&category=Electronics&minPrice=100&maxPrice=1000`\n        \n2. **DELETE /products/:id**\n    \n    - Soft deletes a product by ID\n        \n    - Example: `http://localhost:3000/api/v1/products/{{productId}}`\n        \n3. **POST/products**\n    \n    - Syncronize Contentful API with DB (Manually)\n        \n    - Example: `http://localhost:3000/api/v1/products/{{productId}}`",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "4612621"
	},
	"item": [
		{
			"name": "products",
			"item": [
				{
					"name": "delete-products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": "{{base_url}}products/f53cbae7-4014-4b5b-9fd8-c86f74f95556",
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "sync-products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{base_url}}products",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "filtered-products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}products/?name=G7&category=Smartphone",
							"host": [
								"{{base_url}}products"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "name",
									"value": "G7"
								},
								{
									"key": "category",
									"value": "Smartphone"
								},
								{
									"key": "minPrice",
									"value": "1500",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "1200",
									"disabled": true
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "contentful",
			"item": [
				{
					"name": "contenful-products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}contentful/products",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"item": []
		},
		{
			"name": "report",
			"item": [
				{
					"name": "deleted-percentage-report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoiMSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1NDAyMzYwNCwiZXhwIjoxNzU0NjI4NDA0fQ.Igb6k1ViPVZ7yAneMkSU20fHbV9woH9Eys7o2TvvlAE"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoiMSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1NDAyMzU5NCwiZXhwIjoxNzU0NjI4Mzk0fQ.LOOZwCH5c84KSRBMzJJIQusJlhpYYZIj5ntvDjtcBb4\"",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}reports/deleted-percentage",
							"host": [
								"{{base_url}}reports"
							],
							"path": [
								"deleted-percentage"
							],
							"query": [
								{
									"key": "page",
									"value": "20",
									"disabled": true
								},
								{
									"key": "name",
									"value": "abc",
									"disabled": true
								},
								{
									"key": "category",
									"value": "Smartphone",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "non-deleted-percentage-report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwic3ViIjoiMSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1NDAyMzYwNCwiZXhwIjoxNzU0NjI4NDA0fQ.Igb6k1ViPVZ7yAneMkSU20fHbV9woH9Eys7o2TvvlAE"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}reports/non-deleted-percentage?startDate=2025-07-31 19:55:20.134&endDate=2025-08-01 19:55:20.134",
							"host": [
								"{{base_url}}reports"
							],
							"path": [
								"non-deleted-percentage"
							],
							"query": [
								{
									"key": "withPrice",
									"value": "true",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2025-07-31 19:55:20.134"
								},
								{
									"key": "endDate",
									"value": "2025-08-01 19:55:20.134"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "recent-products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}reports/recent-products",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "auth-login",
			"item": [
				{
					"name": "auth-login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}auth/login",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "hello-world",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}",
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}